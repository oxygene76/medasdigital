syntax = "proto3";
package medasdigital.feeburner;

import "medasdigital/feeburner/params.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";


// this line is used by starport scaffolding # proto/tx/import

option go_package = "medasdigital/x/feeburner/types";

// Msg defines the Msg service.
service Msg {
    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
    // this line is used by starport scaffolding # proto/tx/rpc
}

// MsgUpdateParams is the MsgUpdateParams request type.
//
// Since: 0.47
message MsgUpdateParams {
    option (amino.name) = "feeburner/MsgUpdateParams";
    option (cosmos.msg.v1.signer) = "authority";

    // Authority is the address of the governance account.
    string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

    // params defines the x/feeburner parameters to update.
    //
    // NOTE: All parameters must be supplied.
    feeburner.Params params = 2
    [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: 0.47
message MsgUpdateParamsResponse {}
